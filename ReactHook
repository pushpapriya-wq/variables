import React ,{useState} from 'react';
//counter componenet
// const counter=()=>{
//   const[count,setCount]=useState(0);
//   //current state=count
//   //function to update state=setcount
//   //use state() to intialize the state=0;
//   return(
//     <div>
//       <h1>{count}</h1>
//       <button onClick={()=>setCount(count+1)}>Increment</button>
//       <button onClick={()=>setCount(count-1)}>Decrement</button>
//     </div>
//   )
// }
// export default counter;

React Hooks:
-- introduced on react 16.8 version
-- to manage state and life cycle features in functional components
State: it is an essential part in react because it allows components to be dynamic, interactive and capable of responding to user input or change over time
1 useStateHook: useState allows you to add state to functional components
SYNTAX:
const[state,setState]=useState(initial value)
state: this is current state
setState: this is a function to update the state
initial value: the value you want you to set as the initial value
#js
#button #data
#onclick

const ThemeToggler=()=>{
  const [theme,setTheme] = useState('light')

  const toggleTheme = () =>{
    setTheme(prevTheme=>(prevTheme == 'light' ? 'dark' : 'light'))
  }

  return(
    <div style={{backgroundColor:theme=='light'?'white':'black' , color:theme=='light'? 'black':'white' ,textAlign:'center'}}>
      <h1>The Current theme is {theme}</h1>
      <button onClick={toggleTheme}>toggleTheme</button>
    </div>
  )

}
export defaultÂ ThemeToggler;
